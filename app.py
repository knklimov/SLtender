
import streamlit as st
import openpyxl
from openpyxl.styles import PatternFill
import io

# –¶–µ–ª–µ–≤–æ–π –∑–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ ARGB, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
TARGET_GREEN = "FF5AFC4C"

def process_excel(file):
    wb = openpyxl.load_workbook(file)
    modifications = []

    for sheet_name in wb.sheetnames:
        ws = wb[sheet_name]
        for row in ws.iter_rows(min_row=2):
            for cell in row:
                fill = cell.fill
                if fill and fill.fill_type == "solid" and fill.fgColor and fill.fgColor.rgb:
                    color = fill.fgColor.rgb
                    if color.upper() != TARGET_GREEN:
                        try:
                            original_value = cell.value
                            if isinstance(original_value, (int, float)):
                                new_value = original_value - 3
                                cell.value = new_value
                                modifications.append((sheet_name, cell.coordinate, original_value, new_value, color))
                        except Exception:
                            pass

    output = io.BytesIO()
    wb.save(output)
    output.seek(0)
    return output, modifications

st.title("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤ Excel –ø–æ —Ü–≤–µ—Ç—É —è—á–µ–µ–∫")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])

if uploaded_file:
    processed_file, log = process_excel(uploaded_file)

    st.download_button(
        label="üì• –°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª",
        data=processed_file,
        file_name="modified_output.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )

    if log:
        st.write("–ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —è—á–µ–π–∫–∏:")
        st.dataframe(
            {"–õ–∏—Å—Ç": [x[0] for x in log],
             "–Ø—á–µ–π–∫–∞": [x[1] for x in log],
             "–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ": [x[2] for x in log],
             "–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ": [x[3] for x in log],
             "–¶–≤–µ—Ç": [x[4] for x in log]}
        )
    else:
        st.success("–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω: –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
